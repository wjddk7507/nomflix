{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.948f8aee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.8fc5b8f9.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 70px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid ${props => props.current? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom 0.4s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location: {pathname}}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            🧸\r\n        </span>\r\n    </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Error = ({text, color}) => (\r\n    <Container>\r\n        <Text>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nError.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s ease-in-out;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity:0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size:10px;\r\n    color:rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) => (\r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        🌟\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}{\" \"}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) =>\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n\r\n        {loading ? <Loader /> :\r\n    <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n                {nowPlaying.map(movie => (\r\n                    <Poster \r\n                        key={movie.id} \r\n                        id={movie.id}\r\n                        title={movie.original_title} \r\n                        imageUrl={movie.poster_path}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n                {upcoming.map(movie => (\r\n                    <Poster \r\n                        key={movie.id} \r\n                        id={movie.id}\r\n                        title={movie.original_title} \r\n                        imageUrl={movie.poster_path}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n                {popular.map(movie => (\r\n                    <Poster \r\n                        key={movie.id} \r\n                        id={movie.id}\r\n                        title={movie.original_title} \r\n                        imageUrl={movie.poster_path}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>};\r\n    </>\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"d3b50bbfcc4cfb060fb59f5cdb1c85a2\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {data: {results: nowPlaying}} = await moviesApi.nowPlaying();\r\n            const {data: {results: upcoming}} = await moviesApi.upcoming();\r\n            const {data: {results: popular}} = await moviesApi.popular();\r\n            \r\n            this.setState({\r\n                nowPlaying, upcoming, popular\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV shows | Nomflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader/> : \r\n            <Container>\r\n                {topRated && topRated.length > 0 && \r\n                <Section title=\"Top Rated Shows\">\r\n                    {topRated.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        />\r\n                        ))}\r\n                </Section>}\r\n                {popular && popular.length > 0 && \r\n                <Section title=\"Popular Shows\">\r\n                    {popular.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        />\r\n                        ))}\r\n                </Section>}\r\n                {airingToday && airingToday.length > 0 && \r\n                <Section title=\"Airing Today\">\r\n                    {airingToday.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id}\r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n                }\r\n                {error && <Message text={error} color=\"#e74c3c\" />}\r\n            </Container>};\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {data: {results: topRated}} = await tvApi.topRated();\r\n            const {data: {results: popular}} = await tvApi.popular();\r\n            const {data: {results: airingToday}} = await tvApi.airingToday();\r\n\r\n            this.setState({\r\n                topRated, popular, airingToday\r\n            });\r\n        } catch {\r\n            this.setState({error: \"Can't find TV information\"});\r\n        } finally {\r\n            this.setState({loading: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <TVPresenter \r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults, \r\n    tvResults,\r\n    loading, \r\n    error, \r\n    searchTerm, \r\n    handleSubmit,\r\n    updateTerm\r\n}) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input\r\n                placeholder=\"Search Movies or TV Shows...\"\r\n                value={searchTerm}\r\n                onChange={updateTerm}\r\n            />\r\n        </Form>\r\n        {loading ? <Loader /> : (\r\n            <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Results\">\r\n                        {movieResults.map(movie =>  (\r\n                            <Poster \r\n                                key={movie.id} \r\n                                id={movie.id}\r\n                                title={movie.original_title} \r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)}\r\n                                isMovie={true}\r\n                            />\r\n                         ))}\r\n                    </Section> \r\n                )}\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Shows Results\">\r\n                        {tvResults.map(show => (\r\n                            <Poster \r\n                                key={show.id} \r\n                                id={show.id}\r\n                                title={show.original_name} \r\n                                imageUrl={show.poster_path}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                            />\r\n                        ))}\r\n                    </Section> \r\n                )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {tvResults && \r\n        movieResults && \r\n        tvResults.length === 0 && \r\n        movieResults.length === 0 && (\r\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n            )}\r\n            </>\r\n        )}\r\n    </Container>\r\n    );\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const { target: {value} } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({loading: true});\r\n        try {\r\n            const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\r\n            const {data: {results: tvResults}} = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch{\r\n            this.setState({error: \"Can't find results\"})\r\n        } finally {\r\n            this.setState({loading: false});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, error, loading, searchTerm } = this.state;\r\n        return (\r\n            <SearchPresenter \r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                error={error}\r\n                loading={loading}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position:relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height: 100%;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 60%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({result, loading, error}) => \r\n    loading ? (\r\n    <>\r\n        <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n        </Helmet>\r\n        <Loader />\r\n    </>) : (\r\n        <Container>\r\n        <Helmet>\r\n            <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n        </Helmet>\r\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}/>\r\n            <Content>\r\n                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original/${result.poster_path}` : require(\"../../assets/noPosterSmall.png\").default }/>\r\n                <Data>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                    <ItemContainer>\r\n                        <Item>{result.release_date ? result.release_date && result.release_date.substring(0,4) : result.first_air_date && result.first_air_date.substring(0,4)}</Item>\r\n                        <Divider>.</Divider>\r\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time} min</Item>\r\n                        <Divider>.</Divider>\r\n                        <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name}  /  `)}</Item>\r\n                    </ItemContainer>\r\n                    <Overview>\r\n                        {result.overview}\r\n                    </Overview>\r\n                </Data>\r\n            </Content>\r\n        </Container>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {id}\r\n            },\r\n            history: {push}\r\n        } = this.props;\r\n        const {isMovie} = this.state;\r\n        const parsedId = parseInt(id);\r\n        if(isNaN(parsedId)) {\r\n            return push(\"/\");\r\n        }\r\n        let result;\r\n         try {\r\n              if(isMovie) {\r\n                 ({data: result} = await moviesApi.movieDetail(parsedId));\r\n             } else {\r\n                ({data: result} = await tvApi.showDetail(parsedId));\r\n             }\r\n        } catch {\r\n              this.setState({error: \"Can't find anything.\"});\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading} = this.state;\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\"\r\nimport TV from \"Routes/TV\"\r\nimport Search from \"Routes/Search\"\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default() => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" exact component={TV} />\r\n                <Route path=\"/search\" exact component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}